"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[461],{3461:(e,t,a)=>{a.d(t,{generateWithMultipleModels:()=>n});var r=a(924),s=a(3601);class i{async makeRequest(e,t){console.log("Making request to:",e,"with params:",t);let a=await fetch("/api/text2image/generate",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({endpoint:e,params:t})});if(console.log("Response status:",a.status),!a.ok){let e=await a.json().catch(()=>({}));console.error("API request failed:",e);let t="API request failed: ".concat(a.status);throw e.error?"string"==typeof e.error?t=e.error:"object"==typeof e.error&&(t=JSON.stringify(e.error,null,2)):e.detail?t="string"==typeof e.detail?e.detail:Array.isArray(e.detail)?e.detail.map(e=>e.msg||JSON.stringify(e)).join(", "):JSON.stringify(e.detail,null,2):e.message&&(t=e.message),Error(t)}let r=await a.json();return console.log("API response:",r),r}convertSettingsToParams(e,t,a){let r={prompt:t,...e.defaultParams};switch(void 0!==a.seed&&null!==a.seed&&(r.seed=a.seed),e.id){case"imagen4-ultra":switch(a.imageSize){case"square":case"square_hd":default:r.aspect_ratio="1:1";break;case"portrait_4_3":r.aspect_ratio="3:4";break;case"portrait_16_9":r.aspect_ratio="9:16";break;case"landscape_4_3":r.aspect_ratio="4:3";break;case"landscape_16_9":r.aspect_ratio="16:9"}break;case"seeddream-v3":r.image_size=a.imageSize;break;case"flux-pro-v11-ultra":switch(a.imageSize){case"square":case"square_hd":r.aspect_ratio="1:1";break;case"portrait_4_3":r.aspect_ratio="3:4";break;case"portrait_16_9":r.aspect_ratio="9:16";break;case"landscape_4_3":r.aspect_ratio="4:3";break;default:r.aspect_ratio="16:9"}}return r}async generateWithModel(e,t,a){try{let s=r.Id[e];if(!s)throw Error("Unknown model: ".concat(e));let i=this.convertSettingsToParams(s,t,a);console.log("Generating with ".concat(s.name,":"),{prompt:t,params:i});let o=await this.makeRequest(s.endpoint,i);if(!o.images||0===o.images.length)throw Error("No images returned from API");let n=o.images[0];return{success:!0,imageUrl:n.url,metadata:{seed:o.seed,timings:o.timings,dimensions:{width:n.width,height:n.height}}}}catch(t){return console.error("Generation failed for ".concat(e,":"),t),{success:!1,error:t instanceof Error?t.message:"Unknown error occurred"}}}async generateWithMultipleModels(e,t,a){console.log("Starting multi-model generation with ".concat(e.length," models:"),e);let r=e.map(async e=>{let r=await this.generateWithModel(e,t,a);return[e,r]});try{let t=await Promise.allSettled(r),a={};return t.forEach((t,r)=>{let s=e[r];"fulfilled"===t.status?a[s]=t.value[1]:(console.error("Model ".concat(s," generation rejected:"),t.reason),a[s]={success:!1,error:t.reason instanceof Error?t.reason.message:"Generation failed"})}),a}catch(a){console.error("Multi-model generation failed:",a);let t={};return e.forEach(e=>{t[e]={success:!1,error:a instanceof Error?a.message:"Multi-model generation failed"}}),t}}async testModelAvailability(e){try{if(!r.Id[e])return!1;return(await this.generateWithModel(e,"test image",{imageSize:"square"})).success}catch(e){return!1}}async estimateGenerationTime(e,t){let a={};return e.forEach(e=>{let s=r.Id[e];if(s){let r=(6-s.speedRating)*.5,i=Math.min(t.split(" ").length/10,2);a[e]=Math.round(15*r*(1+i))}}),a}async getModelCapabilities(e){let t=r.Id[e];return t?{available:!0,maxResolution:t.maxResolution,estimatedCost:t.estimatedCost,features:t.strengths}:null}constructor(){this.apiKey=null,this.baseUrl="https://fal.run",this.apiKey=s.env.FAL_API_KEY||null}}let o=new i;async function n(e,t,a){return o.generateWithMultipleModels(e,t,a)}}}]);